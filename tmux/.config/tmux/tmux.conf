# ==========================
# ===  General settings  ===
# ==========================
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",*256col*:Tc"

set -g default-command "reattach-to-user-namespace -l ${SHELL}"

set -g history-limit 1000000
set -g buffer-limit 20
set -sg escape-time 0
set -g display-time 1500
set -g remain-on-exit off
set -g repeat-time 300
set -g detach-on-destroy off     # don't exit from tmux when closing a session
set -g renumber-windows on
set -g status-position top       # macOS / darwin style
set -g set-clipboard on          # use system clipboard
set -g pane-active-border-style 'fg=magenta,bg=default'
set -g pane-border-style 'fg=brightblack,bg=default'
# Enable focus events, which are needed to keep vim's focus events working when
# vim is running inside tmux.
set -g focus-events on

setw -g allow-rename on
setw -g automatic-rename on
setw -g aggressive-resize on
setw -g mode-keys vi

# Change prefix key to C-a, easier to type, same to "screen"
unbind-key C-b
set -g prefix C-a
bind-key C-a send-prefix

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# Enable mouse support
set -g mouse on

# Edit configuration and reload
bind-key C-e new-window -n 'tmux.conf' "sh -c '\${EDITOR:-vim} ~/.config/tmux/tmux.conf'"

# Reload tmux configuration 
bind-key C-r source-file ~/.config/tmux/tmux.conf \; display "Config reloaded"

# new window and retain cwd
bind-key c new-window -c "#{pane_current_path}"
bind-key g new-window -c "#{pane_current_path}" -n "lazygit" lazygit
bind-key e send-keys "tmux capture-pane -p -S - | nvim -c 'set buftype=nofile' +" Enter

# Rename session and window
bind-key r command-prompt -I "#{window_name}" "rename-window '%%'"
bind-key R command-prompt -I "#{session_name}" "rename-session '%%'"

# Split panes
bind-key | split-window -h -c "#{pane_current_path}"
bind-key _ split-window -v -c "#{pane_current_path}"

# bind-key j command-prompt -p "Send pane to:"  "join-pane -t '%%'"
# bind-key J command-prompt -p "Merge pane from:"  "join-pane -s '%%'"

# renumber windows
bind-key "#" move-window -r

# Kill pane/window/session shortcuts
bind-key x kill-pane
bind-key X kill-window
bind-key C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind-key M-x confirm-before -p "kill-session #S? (y/n)" kill-session

# Detach from session
bind-key d detach
bind-key D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'

bind-key -n d if -F '#{==:#{pane_mode},tree-mode}' 'send x' 'send d'

# Use 'd' instead of 't' to tag panes that I want to delete
# bind -n d if -F '#{==:#{pane_mode},tree-mode}' 'send t' 'send d'

# Use 'D' instead of 'X' to delete all tagged panes
bind-key -n D if -F '#{==:#{pane_mode},tree-mode}' 'send X' 'send D'
# Search sessions using an fzf menu
# Found this gem down here:
# https://github.com/majjoha/dotfiles/blob/cd6f966d359e16b3a7c149f96d4edb8a83e769db/.config/tmux/tmux.conf#L41
bind M-s display-popup -E -w 75% -h 75% "\
  tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
  sed '/^$/d' |\
  fzf --reverse --header jump-to-session --preview 'tmux capture-pane -pt {}'  |\
  xargs tmux switch-client -t"

# fzf menu to kill sessions
# Credit: video below by Waylon Walker
# https://www.youtube.com/watch?v=QWPyYx54JbE
bind M-S display-popup -E "\
    tmux list-sessions -F '#{?session_attached,,#{session_name}}' |\
    fzf --reverse -m --header=kill-session |\
    xargs -I {} tmux kill-session -t {}"



# =====================================
# ===           Window              ===
# =====================================

# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+

# Ctr + Meta + h/j/k/l to resize panes.
# bind-key -n C-M-h resize-pane -L 2
# bind-key -n C-M-j resize-pane -D 2
# bind-key -n C-M-k resize-pane -U 2
# bind-key -n C-M-l resize-pane -R 2

# ============================
# ===       Tools          ===
# ============================

bind-key ` capture-pane \; save-buffer /tmp/tmux-buffer \; delete-buffer \; display-popup -w 80% -h 60% -E "fzf-speed"
bind-key -r f run-shell "tmux neww ~/.local/bin/tmux-sessionizer"

# bind-key M-r new-window -n rss -c $HOME \; send-keys -t rss 'newsboat' 'Enter'

# ============================
# ===       Plugins        ===
# ============================
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-resurrect'

set -g @plugin 'catppuccin/tmux'
# set -g @plugin 'christoomey/vim-tmux-navigator'
set -g @plugin 'omerxx/tmux-sessionx'


set -g @sessionx-bind 'o'
set -g @sessionx-x-path '$(realpath ~/dotfiles)'
set -g @sessionx-custom-paths 'notes,issues'
set -g @sessionx-window-height '85%'
set -g @sessionx-window-width '85%'
set -g @sessionx-zoxide-mode 'on'
set -g @sessionx-filter-current 'false'
set -g @sessionx-preview-enabled 'true'

set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-strategy-nvim 'session'

set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#W#{?window_zoomed_flag,(),}"
set -g @catppuccin_status_modules_right "directory date_time"
set -g @catppuccin_status_modules_left "session"
set -g @catppuccin_status_left_separator  " "
set -g @catppuccin_status_right_separator " "
set -g @catppuccin_status_right_separator_inverse "no"
set -g @catppuccin_status_fill "icon"
set -g @catppuccin_status_connect_separator "no"
set -g @catppuccin_directory_text "#{b:pane_current_path}"
set -g @catppuccin_date_time_text "%H:%M"

set -g @continuum-restore 'on'
set -g @continuum-save-interval '5'

# must be last
set -g @plugin 'tmux-plugins/tmux-continuum'

# Run all plugins' scripts
run '~/.config/tmux/plugins/tpm/tpm'
